[INF:CM0023] Creating log file ../../build/tests/Typename/slpp_all/surelog.log.

LIB:  work
FILE: dut.sv
n<> u<0> t<Null_rule> p<79> s<78> l<1>
n<> u<1> t<Module_keyword> p<5> s<2> l<1>
n<top> u<2> t<StringConst> p<5> s<4> l<1>
n<> u<3> t<Port> p<4> l<1>
n<> u<4> t<List_of_ports> p<5> c<3> l<1>
n<> u<5> t<Module_nonansi_header> p<76> c<1> s<75> l<1>
n<> u<6> t<Dollar_keyword> p<20> s<7> l<4>
n<display> u<7> t<StringConst> p<20> s<19> l<4>
n<":assert: ('%s' == 'logic')"> u<8> t<StringLiteral> p<9> l<4>
n<> u<9> t<Primary_literal> p<10> c<8> l<4>
n<> u<10> t<Primary> p<11> c<9> l<4>
n<> u<11> t<Expression> p<19> c<10> s<18> l<4>
n<$typename> u<12> t<StringConst> p<13> l<4>
n<> u<13> t<System_task_names> p<16> c<12> s<15> l<4>
n<> u<14> t<IntVec_TypeLogic> p<15> l<4>
n<> u<15> t<Data_type> p<16> c<14> l<4>
n<> u<16> t<System_task> p<17> c<13> l<4>
n<> u<17> t<Primary> p<18> c<16> l<4>
n<> u<18> t<Expression> p<19> c<17> l<4>
n<> u<19> t<List_of_arguments> p<20> c<11> l<4>
n<> u<20> t<Subroutine_call> p<21> c<6> l<4>
n<> u<21> t<Subroutine_call_statement> p<22> c<20> l<4>
n<> u<22> t<Statement_item> p<23> c<21> l<4>
n<> u<23> t<Statement> p<24> c<22> l<4>
n<> u<24> t<Statement_or_null> p<67> c<23> s<43> l<4>
n<> u<25> t<Dollar_keyword> p<39> s<26> l<5>
n<display> u<26> t<StringConst> p<39> s<38> l<5>
n<":assert: ('%s' == 'logic')"> u<27> t<StringLiteral> p<28> l<5>
n<> u<28> t<Primary_literal> p<29> c<27> l<5>
n<> u<29> t<Primary> p<30> c<28> l<5>
n<> u<30> t<Expression> p<38> c<29> s<37> l<5>
n<$typename> u<31> t<StringConst> p<32> l<5>
n<> u<32> t<System_task_names> p<35> c<31> s<34> l<5>
n<> u<33> t<IntegerAtomType_Int> p<34> l<5>
n<> u<34> t<Data_type> p<35> c<33> l<5>
n<> u<35> t<System_task> p<36> c<32> l<5>
n<> u<36> t<Primary> p<37> c<35> l<5>
n<> u<37> t<Expression> p<38> c<36> l<5>
n<> u<38> t<List_of_arguments> p<39> c<30> l<5>
n<> u<39> t<Subroutine_call> p<40> c<25> l<5>
n<> u<40> t<Subroutine_call_statement> p<41> c<39> l<5>
n<> u<41> t<Statement_item> p<42> c<40> l<5>
n<> u<42> t<Statement> p<43> c<41> l<5>
n<> u<43> t<Statement_or_null> p<67> c<42> s<65> l<5>
n<> u<44> t<Dollar_keyword> p<61> s<45> l<6>
n<display> u<45> t<StringConst> p<61> s<60> l<6>
n<":assert: ('%s' == 'logic')"> u<46> t<StringLiteral> p<47> l<6>
n<> u<47> t<Primary_literal> p<48> c<46> l<6>
n<> u<48> t<Primary> p<49> c<47> l<6>
n<> u<49> t<Expression> p<60> c<48> s<59> l<6>
n<> u<50> t<Dollar_keyword> p<57> s<51> l<6>
n<typename> u<51> t<StringConst> p<57> s<56> l<6>
n<a> u<52> t<StringConst> p<53> l<6>
n<> u<53> t<Primary_literal> p<54> c<52> l<6>
n<> u<54> t<Primary> p<55> c<53> l<6>
n<> u<55> t<Expression> p<56> c<54> l<6>
n<> u<56> t<List_of_arguments> p<57> c<55> l<6>
n<> u<57> t<Complex_func_call> p<58> c<50> l<6>
n<> u<58> t<Primary> p<59> c<57> l<6>
n<> u<59> t<Expression> p<60> c<58> l<6>
n<> u<60> t<List_of_arguments> p<61> c<49> l<6>
n<> u<61> t<Subroutine_call> p<62> c<44> l<6>
n<> u<62> t<Subroutine_call_statement> p<63> c<61> l<6>
n<> u<63> t<Statement_item> p<64> c<62> l<6>
n<> u<64> t<Statement> p<65> c<63> l<6>
n<> u<65> t<Statement_or_null> p<67> c<64> s<66> l<6>
n<> u<66> t<End> p<67> l<7>
n<> u<67> t<Seq_block> p<68> c<24> l<3>
n<> u<68> t<Statement_item> p<69> c<67> l<3>
n<> u<69> t<Statement> p<70> c<68> l<3>
n<> u<70> t<Statement_or_null> p<71> c<69> l<3>
n<> u<71> t<Initial_construct> p<72> c<70> l<3>
n<> u<72> t<Module_common_item> p<73> c<71> l<3>
n<> u<73> t<Module_or_generate_item> p<74> c<72> l<3>
n<> u<74> t<Non_port_module_item> p<75> c<73> l<3>
n<> u<75> t<Module_item> p<76> c<74> l<3>
n<> u<76> t<Module_declaration> p<77> c<5> l<1>
n<> u<77> t<Description> p<78> c<76> l<1>
n<> u<78> t<Source_text> p<79> c<77> l<1>
n<> u<79> t<Top_level_rule> l<1>
[WRN:PA0205] dut.sv:1: No timescale set for "top".

[INF:CP0300] Compilation...

[INF:CP0303] dut.sv:1: Compile module "work@top".

[INF:CP0302] builtin.sv:4: Compile class "work@mailbox".

[INF:CP0302] builtin.sv:33: Compile class "work@process".

[INF:CP0302] builtin.sv:58: Compile class "work@semaphore".

[INF:EL0526] Design Elaboration...

[NTE:EL0503] dut.sv:1: Top level module "work@top".

[NTE:EL0508] Nb Top level modules: 1.

[NTE:EL0509] Max instance depth: 1.

[NTE:EL0510] Nb instances: 1.

[NTE:EL0511] Nb leaf instances: 0.

UHDM HTML COVERAGE REPORT: ../../build/tests/Typename/slpp_all//surelog.uhdm.chk
====== UHDM =======
design: (work@top)
|vpiName:work@top
|uhdmallPackages:
\_package: builtin, parent:work@top
  |vpiDefName:builtin
  |vpiFullName:builtin
|uhdmallClasses:
\_class_defn: (builtin::array)
  |vpiName:builtin::array
  |vpiFullName:builtin::builtin::array
|uhdmallClasses:
\_class_defn: (builtin::queue)
  |vpiName:builtin::queue
  |vpiFullName:builtin::builtin::queue
|uhdmallClasses:
\_class_defn: (builtin::string)
  |vpiName:builtin::string
  |vpiFullName:builtin::builtin::string
|uhdmallClasses:
\_class_defn: (builtin::system)
  |vpiName:builtin::system
  |vpiFullName:builtin::builtin::system
|uhdmallClasses:
\_class_defn: (work@mailbox), file:${SURELOG_DIR}/build/bin/sv/builtin.sv, line:4, parent:work@top
  |vpiName:work@mailbox
|uhdmallClasses:
\_class_defn: (work@process), file:${SURELOG_DIR}/build/bin/sv/builtin.sv, line:33, parent:work@top
  |vpiName:work@process
|uhdmallClasses:
\_class_defn: (work@semaphore), file:${SURELOG_DIR}/build/bin/sv/builtin.sv, line:58, parent:work@top
  |vpiName:work@semaphore
|uhdmallModules:
\_module: work@top, file:dut.sv, line:1, parent:work@top
  |vpiDefName:work@top
  |vpiFullName:work@top
  |vpiProcess:
  \_initial: 
    |vpiStmt:
    \_begin: , line:3
      |vpiFullName:work@top
      |vpiStmt:
      \_sys_func_call: ($display), line:4
        |vpiName:$display
        |vpiArgument:
        \_constant: , line:4
          |vpiConstType:6
          |vpiDecompile:":assert: ('%s' == 'logic')"
          |vpiSize:28
          |STRING:":assert: ('%s' == 'logic')"
        |vpiArgument:
        \_constant: , line:4
          |vpiDecompile:logic
          |STRING:logic
      |vpiStmt:
      \_sys_func_call: ($display), line:5
        |vpiName:$display
        |vpiArgument:
        \_constant: , line:5
          |vpiConstType:6
          |vpiDecompile:":assert: ('%s' == 'logic')"
          |vpiSize:28
          |STRING:":assert: ('%s' == 'logic')"
        |vpiArgument:
        \_constant: , line:5
          |vpiDecompile:int
          |STRING:int
      |vpiStmt:
      \_sys_func_call: ($display), line:6
        |vpiName:$display
        |vpiArgument:
        \_constant: , line:6
          |vpiConstType:6
          |vpiDecompile:":assert: ('%s' == 'logic')"
          |vpiSize:28
          |STRING:":assert: ('%s' == 'logic')"
        |vpiArgument:
        \_sys_func_call: ($typename), line:6
          |vpiName:$typename
          |vpiArgument:
          \_ref_obj: (a), line:6
            |vpiName:a
|uhdmtopModules:
\_module: work@top (work@top), file:dut.sv, line:1
  |vpiDefName:work@top
  |vpiName:work@top
  |vpiProcess:
  \_initial: 
    |vpiStmt:
    \_begin: , line:3
      |vpiFullName:work@top
      |vpiStmt:
      \_sys_func_call: ($display), line:4
        |vpiName:$display
        |vpiArgument:
        \_constant: , line:4, parent:$display
          |vpiConstType:6
          |vpiDecompile:":assert: ('%s' == 'logic')"
          |vpiSize:28
          |STRING:":assert: ('%s' == 'logic')"
        |vpiArgument:
        \_constant: , line:4, parent:$display
          |vpiDecompile:logic
          |STRING:logic
      |vpiStmt:
      \_sys_func_call: ($display), line:5
        |vpiName:$display
        |vpiArgument:
        \_constant: , line:5, parent:$display
          |vpiConstType:6
          |vpiDecompile:":assert: ('%s' == 'logic')"
          |vpiSize:28
          |STRING:":assert: ('%s' == 'logic')"
        |vpiArgument:
        \_constant: , line:5, parent:$display
          |vpiDecompile:int
          |STRING:int
      |vpiStmt:
      \_sys_func_call: ($display), line:6
        |vpiName:$display
        |vpiArgument:
        \_constant: , line:6, parent:$display
          |vpiConstType:6
          |vpiDecompile:":assert: ('%s' == 'logic')"
          |vpiSize:28
          |STRING:":assert: ('%s' == 'logic')"
        |vpiArgument:
        \_sys_func_call: ($typename), line:6, parent:$display
          |vpiName:$typename
          |vpiArgument:
          \_ref_obj: (a), line:6, parent:$typename
            |vpiName:a
            |vpiFullName:work@top.$display.$typename.a
===================
[  FATAL] : 0
[ SYNTAX] : 0
[  ERROR] : 0
[WARNING] : 1
[   NOTE] : 5

