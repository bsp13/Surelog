name: 'main'

on:
  push:
  pull_request:

jobs:
  bionic-gcc:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y \
          g++-7 \
          tclsh \
          default-jre \
          cmake \
          build-essential \
          swig \
          google-perftools \
          libgoogle-perftools-dev \
          uuid-dev

    - uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Get top commit details
      uses: actions/github-script@0.3.0
      id: author-date
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const commit_details = await github.git.getCommit({ owner: context.repo.owner, repo: context.repo.repo, commit_sha: context.sha });
          return commit_details.data.author.date

    - name: Retrieve date
      run: |
        echo "COMMITTED_AT=$(date -d ${{ steps.author-date.outputs.result }} +'%Y.%m.%d_%H.%M.%S')" >> $GITHUB_ENV
        echo ${{ env.COMMITTED_AT }}

    - name: Git Pull
      uses: actions/checkout@v2

    - name: Pull UHDM
      uses: actions/checkout@v2
      with:
        repository: bsp13/UHDM
        lfs: false
        path: third_party/UHDM
        # token: ${{ secrets.GHA_DAVENCHE_CI_TOKEN }}

    - name: Pull flatbuffers
      uses: actions/checkout@v2
      with:
        repository: bsp13/flatbuffers
        lfs: false
        path: third_party/flatbuffers
        # token: ${{ secrets.GHA_DAVENCHE_CI_TOKEN }}

    - name: Pull googletest
      uses: actions/checkout@v2
      with:
        repository: google/googletest
        lfs: false
        path: third_party/googletest

    - name: Pull capnproto
      uses: actions/checkout@v2
      with:
        repository: bsp13/capnproto
        lfs: false
        path: third_party/UHDM/third_party/capnproto
        # token: ${{ secrets.GHA_DAVENCHE_CI_TOKEN }}

    - name: Configure shell
      run: |
        echo 'CC=gcc-7' >> $GITHUB_ENV
        echo 'CXX=g++-7' >> $GITHUB_ENV
        echo 'PREFIX=/usr/local' >> $GITHUB_ENV

    - name: Show shell configuration
      run: |
        env
        which cmake && cmake --version
        which make && make --version
        which swig && swig -version
        which java && java -version
        which python && python --version
        which ninja && ninja --version
        which tclsh && echo 'puts [info patchlevel];exit 0' | tclsh
        which $CC && $CC --version
        which $CXX && $CXX --version

    - name: Build artifacts
      run: |
        cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=out/install/Debug -S . -B out/build/Debug
        cmake --build out/build/Debug -j `nproc`
        cmake --install out/build/Debug

        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=out/install/Release -S . -B out/build/Release
        cmake --build out/build/Release -j `nproc`
        cmake --install out/build/Release

    - name: Build
      run: |
        make release
        sudo make install

    # - name: Test
    #   run: |
    #     make test_install
    #     make test/unittest
    #     make regression
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1

    - name: Upload archive to bucket
      run: |
          cd out/install/gcc
          ls -ltr
          tar czfp Surelog_bionic-gcc_${{ env.GITHUB_JOB }}_${{ env.COMMITTED_AT }}.tgz .
          aws s3 cp Surelog_bionic-gcc_${{ env.GITHUB_JOB }}_${{ env.COMMITTED_AT }}.tgz s3://davenche-bin/Surelog_bionic-gcc_${{ env.GITHUB_JOB }}_${{ env.COMMITTED_AT }}.tgz

  windows-msvc:
    runs-on: windows-latest

    defaults:
      run:
        shell: cmd

    steps:
    - name: Install Core Dependencies
      run: |
        choco install -y make
        choco install -y swig --version=3.0.12

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
        architecture: x64

    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        java-package: jre
        architecture: x64

    - run: git config --global core.autocrlf input
      shell: bash

    - name: Get top commit details
      uses: actions/github-script@0.3.0
      id: author-date
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const commit_details = await github.git.getCommit({ owner: context.repo.owner, repo: context.repo.repo, commit_sha: context.sha });
          return commit_details.data.author.date

    - name: Retrieve date
      run: |
        echo "COMMITTED_AT=$(date -d ${{ steps.author-date.outputs.result }} +'%Y.%m.%d_%H.%M.%S')" >> $GITHUB_ENV
        echo ${{ env.COMMITTED_AT }}

    - name: Git Pull
      uses: actions/checkout@v2

    - name: Pull UHDM
      uses: actions/checkout@v2
      with:
        repository: bsp13/UHDM
        lfs: false
        path: third_party/UHDM
        # token: ${{ secrets.GHA_DAVENCHE_CI_TOKEN }}

    - name: Pull flatbuffers
      uses: actions/checkout@v2
      with:
        repository: bsp13/flatbuffers
        lfs: false
        path: third_party/flatbuffers
        # token: ${{ secrets.GHA_DAVENCHE_CI_TOKEN }}

    - name: Pull googletest
      uses: actions/checkout@v2
      with:
        repository: google/googletest
        lfs: false
        path: third_party/googletest

    - name: Pull capnproto
      uses: actions/checkout@v2
      with:
        repository: bsp13/capnproto
        lfs: false
        path: third_party/UHDM/third_party/capnproto
        # token: ${{ secrets.GHA_DAVENCHE_CI_TOKEN }}

    - name: Build & Test
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"

        set CMAKE_GENERATOR=Ninja
        set CC=cl
        set CXX=cl
        set NO_TCMALLOC=On
        set PREFIX=%GITHUB_WORKSPACE%\install
        set CPU_CORES=%NUMBER_OF_PROCESSORS%

        set MAKE_DIR=C:\make\bin
        set TCL_DIR=%PROGRAMFILES%\Git\mingw64\bin
        set SWIG_DIR=%PROGRMDATA%\chocolatey\lib\swig\tools\install\swigwin-3.0.12
        set PATH=%pythonLocation%;%SWIG_DIR%;%JAVA_HOME%\bin;%MAKE_DIR%;%TCL_DIR%;%PATH%

        set
        where cmake && cmake --version
        where make && make --version
        where swig && swig -version
        where java && java -version
        where python && python --version
        where ninja && ninja --version

        cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=out/install/Debug -S . -B out/build/Debug
        cmake --build out/build/Debug -j %NUMBER_OF_PROCESSORS%
        cmake --install out/build/Debug

        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=out/install/Release -S . -B out/build/Release
        cmake --build out/build/Release -j %NUMBER_OF_PROCESSORS%
        cmake --install out/build/Release

        make release
        make install
    #     make test_install
    #     make test/unittest
    #     make regression
#
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1

    - name: Upload archive to bucket
      run: |
          cd out/install/msvc
          ls -ltr
          tar czfp Surelog_windows-msvc_${{ env.GITHUB_JOB }}_${{ env.COMMITTED_AT }}.tgz .
          aws s3 cp Surelog_windows-msvc_${{ env.GITHUB_JOB }}_${{ env.COMMITTED_AT }}.tgz s3://davenche-bin/Surelog_windows-msvc_${{ env.GITHUB_JOB }}_${{ env.COMMITTED_AT }}.tgz


